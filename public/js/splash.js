// public/js/splash.js - Fast Splash Screen (1.2 seconds)
(function () {
  console.log('[SPLASH] üé® Initializing fast splash (1.2s)');

  const splash = document.getElementById('splash');
  if (!splash) {
    console.warn('[SPLASH] Splash element not found');
    return;
  }

  const fill = document.getElementById('splash-fill');
  const percentEl = document.getElementById('splash-percent');
  
  if (!fill) {
    console.warn('[SPLASH] Progress fill element not found');
    return;
  }

  // ====== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ======
  const TOTAL_DURATION = 1200; // 1.2 —Å–µ–∫—É–Ω–¥—ã
  const HIDE_DELAY = 200; // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–∫—Ä—ã—Ç–∏–µ–º
  const REMOVE_DELAY = 300; // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º –∏–∑ DOM

  let currentProgress = 0;
  let isComplete = false;
  let startTime = performance.now();
  let animationFrame = null;

  // ====== –≠–¢–ê–ü–´ –ü–†–û–ì–†–ï–°–°–ê (–≤—Å–µ–≥–æ 1.2 —Å–µ–∫) ======
  const stages = [
    { percent: 20, time: 150 },   // 0-150ms: –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
    { percent: 40, time: 300 },   // 150-300ms: –ó–∞–≥—Ä—É–∑–∫–∞
    { percent: 55, time: 500 },   // 300-500ms: –ü–∞—É–∑–∞
    { percent: 70, time: 700 },   // 500-700ms: –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ
    { percent: 85, time: 900 },   // 700-900ms: –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ
    { percent: 95, time: 1100 },  // 900-1100ms: –§–∏–Ω–∞–ª
    { percent: 100, time: 1200 }  // 1100-1200ms: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
  ];

  let currentStage = 0;

  // ====== –í–´–ß–ò–°–õ–ï–ù–ò–ï –ü–†–û–ì–†–ï–°–°–ê –ü–û –í–†–ï–ú–ï–ù–ò ======
  function calculateProgress(elapsed) {
    // –ï—Å–ª–∏ –≤—Ä–µ–º—è –≤—ã—à–ª–æ - 100%
    if (elapsed >= TOTAL_DURATION) {
      return 100;
    }

    // –ù–∞—Ö–æ–¥–∏–º —Ç–µ–∫—É—â–∏–π –∏ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø
    let prevStage = { percent: 0, time: 0 };
    let nextStage = stages[0];

    for (let i = 0; i < stages.length; i++) {
      if (elapsed < stages[i].time) {
        nextStage = stages[i];
        if (i > 0) prevStage = stages[i - 1];
        break;
      }
      prevStage = stages[i];
    }

    // –ò–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏
    const stageDuration = nextStage.time - prevStage.time;
    const stageElapsed = elapsed - prevStage.time;
    const stageProgress = stageElapsed / stageDuration;

    // –ü–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ —Å easing
    const easedProgress = easeInOutCubic(stageProgress);
    
    const percentDiff = nextStage.percent - prevStage.percent;
    const progress = prevStage.percent + (percentDiff * easedProgress);

    return Math.min(100, Math.max(0, progress));
  }

  // ====== EASING –§–£–ù–ö–¶–ò–Ø ======
  function easeInOutCubic(t) {
    return t < 0.5
      ? 4 * t * t * t
      : 1 - Math.pow(-2 * t + 2, 3) / 2;
  }

  // ====== –û–ë–ù–û–í–õ–ï–ù–ò–ï UI ======
  function updateUI(progress) {
    const p = Math.round(progress);
    
    fill.style.width = p + '%';
    
    if (percentEl && !percentEl.hidden) {
      percentEl.textContent = p + '%';
    }
  }

  // ====== –ê–ù–ò–ú–ê–¶–ò–Ø –ü–†–û–ì–†–ï–°–°–ê ======
  function animate() {
    if (isComplete) return;

    const elapsed = performance.now() - startTime;
    const progress = calculateProgress(elapsed);

    currentProgress = progress;
    updateUI(progress);

    // –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ 100% –∏–ª–∏ –≤—Ä–µ–º—è –≤—ã—à–ª–æ
    if (progress >= 100 || elapsed >= TOTAL_DURATION) {
      completeSplash();
      return;
    }

    animationFrame = requestAnimationFrame(animate);
  }

  // ====== –ó–ê–í–ï–†–®–ï–ù–ò–ï SPLASH ======
  function completeSplash() {
    if (isComplete) return;
    
    console.log('[SPLASH] ‚úÖ Complete! (', Math.round(performance.now() - startTime), 'ms)');
    
    isComplete = true;
    currentProgress = 100;
    updateUI(100);
    
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–∫—Ä—ã—Ç–∏–µ–º
    setTimeout(() => {
      splash.classList.add('splash--hide');
      
      // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
      setTimeout(() => {
        if (animationFrame) {
          cancelAnimationFrame(animationFrame);
        }
        splash.remove();
        console.log('[SPLASH] Removed from DOM');
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á—Ç–æ splash –∑–∞–≤–µ—Ä—à—ë–Ω
        window.dispatchEvent(new Event('splash:complete'));
      }, REMOVE_DELAY);
    }, HIDE_DELAY);
  }

  // ====== –ü–£–ë–õ–ò–ß–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø ======
  window.setSplashProgress = function (p) {
    // –í —Ä–µ–∂–∏–º–µ 1.2 —Å–µ–∫—É–Ω–¥—ã —Ä—É—á–Ω–æ–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
    // –ù–æ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    console.log('[SPLASH] Manual progress ignored in timed mode:', p + '%');
  };

  // ====== –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ó–ê–í–ï–†–®–ï–ù–ò–ï ======
  window.completeSplash = completeSplash;

  // ====== –°–û–ë–´–¢–ò–Ø –ó–ê–ì–†–£–ó–ö–ò ======
  
  // –ï—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å –±—ã—Å—Ç—Ä–µ–µ 1.2 —Å–µ–∫ - –≤—Å—ë —Ä–∞–≤–Ω–æ –∂–¥—ë–º
  let loadComplete = false;
  
  window.addEventListener('load', () => {
    loadComplete = true;
    console.log('[SPLASH] Page loaded at', Math.round(performance.now() - startTime), 'ms');
    
    // –ï—Å–ª–∏ —É–∂–µ –ø—Ä–æ—à–ª–æ 1.2 —Å–µ–∫ - –∑–∞–≤–µ—Ä—à–∞–µ–º —Å—Ä–∞–∑—É
    const elapsed = performance.now() - startTime;
    if (elapsed >= TOTAL_DURATION) {
      completeSplash();
    }
  });

  // ====== –¢–ê–ô–ú–ê–£–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò ======
  // –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
  const safetyTimeout = setTimeout(() => {
    if (!isComplete) {
      console.warn('[SPLASH] ‚è±Ô∏è Safety timeout - force complete');
      completeSplash();
    }
  }, 3000);

  // ====== –°–¢–ê–†–¢ –ê–ù–ò–ú–ê–¶–ò–ò ======
  console.log('[SPLASH] Starting animation (target: ' + TOTAL_DURATION + 'ms)');
  startTime = performance.now();
  animate();

  // ====== –≠–ö–°–ü–û–†–¢ ======
  window.WTSplash = {
    complete: completeSplash,
    getCurrentProgress: () => Math.round(currentProgress),
    getElapsedTime: () => Math.round(performance.now() - startTime),
    getDuration: () => TOTAL_DURATION
  };

  // ====== DEBUG ======
  if (window.location.search.includes('debug')) {
    console.log('[SPLASH] Debug mode enabled');
    if (percentEl) percentEl.hidden = false;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º—è –∫–∞–∂–¥—ã–µ 100–º—Å
    const debugInterval = setInterval(() => {
      if (isComplete) {
        clearInterval(debugInterval);
        return;
      }
      const elapsed = performance.now() - startTime;
      console.log('[SPLASH] Progress:', Math.round(currentProgress) + '%', 'Time:', Math.round(elapsed) + 'ms');
    }, 100);
  }

  console.log('[SPLASH] ‚úÖ Initialized');
})();
